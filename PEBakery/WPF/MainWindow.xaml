<!--
    Copyright (C) 2016-2017 Hajin Jang
    Licensed under GPL 3.0
 
    PEBakery is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
    
    Additional permission under GNU GPL version 3 section 7

    If you modify this program, or any covered work, by linking
    or combining it with external libraries, containing parts
    covered by the terms of various license, the licensors of
    this program grant you additional permission to convey the
    resulting work. An external library is a library which is
    not derived from or based on this program. 
-->
    
<Window x:Class="PEBakery.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PEBakery.WPF"
        xmlns:custom="clr-namespace:PEBakery.WPF.Controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        mc:Ignorable="d"
        FontSize="13"
        FontFamily="Segoe UI"
        WindowStartupLocation="CenterScreen"
        Title="PEBakery"
        Width="900" Height="720"
        MinWidth="800" MinHeight="600"
        Closing="Window_Closing">
    <Window.DataContext>
        <local:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:TaskbarProgressConverter x:Key="TaskbarProgressConverter" />
        <Style x:Key="BitmapButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BackgroundButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Button
                            BorderThickness="0"
                            BorderBrush="Black">
                            <Button.Background>
                                <SolidColorBrush Opacity="1"></SolidColorBrush>
                            </Button.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Button>
                        <!-- <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers> -->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ImageButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.75" />
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusLightColor" TargetType="{x:Type TreeViewItem}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightBlue"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Grid
            DockPanel.Dock="Top" Height="80" Background="LightBlue"
            Visibility="{Binding NormalInterfaceVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>
            
            <StackPanel
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Orientation="Horizontal">
                <Image
                    Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                    Margin="15, 15, 5, 15"
                    Source="{StaticResource DonutSvgImage}">
                </Image>
                <TextBlock
                    Text="PEBakery"
                    Margin="0, 0, 15, 0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="40" 
                    FontWeight="SemiBold"
                    FontStretch="Condensed" FontStyle="Italic">
                </TextBlock>
            </StackPanel>

            <custom:ProgressRing
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                Margin="10"
                HorizontalAlignment="Left"
                IsActive="{Binding WorkInProgress}">
            </custom:ProgressRing>
            <Button 
                Grid.Row="0" Grid.Column="2" 
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="BuildButton_Click"
                ToolTip="Build Project">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Play" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button 
                Grid.Row="0" Grid.Column="3"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="RefreshButton_Click"
                ToolTip="Refresh Project">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Refresh" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button
                Grid.Row="0" Grid.Column="4"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="SettingButton_Click"
                ToolTip="Setting">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Settings" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button
                Grid.Row="0" Grid.Column="5"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="LogButton_Click"
                ToolTip="View Logs">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="CommentCheck" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button
                Grid.Row="0" Grid.Column="6"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="UtilityButton_Click"
                ToolTip="Utility">
                <Button.Content>
                    <iconPacks:PackIconModern Kind="BoxLayered" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button
                Grid.Row="0" Grid.Column="7"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="UpdateButton_Click"
                ToolTip="Update Project">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Download" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button
                Grid.Row="0" Grid.Column="8"
                Margin="4"
                Style="{StaticResource BackgroundButton}"
                Click="AboutButton_Click"
                ToolTip="About PEBakery">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Help" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>

            <TextBlock Text="Build" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Refresh" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Setting" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Log" Grid.Row="1" Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Utility" Grid.Row="1" Grid.Column="6" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Update" Grid.Row="1" Grid.Column="7" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="About" Grid.Row="1" Grid.Column="8" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
        </Grid>
        <Grid
            DockPanel.Dock="Top" Height="80" Background="LightBlue"
            Visibility="{Binding BuildInterfaceVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="20" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="60"/>
            </Grid.ColumnDefinitions>
            
            <StackPanel
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Orientation="Horizontal">
                <Image
                    Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                    Margin="15, 15, 5, 15"
                    Source="{StaticResource DonutSvgImage}">
                </Image>
                <TextBlock
                    Text="PEBakery"
                    Margin="0, 0, 15, 0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="40" 
                    FontWeight="SemiBold"
                    FontStretch="Condensed" FontStyle="Italic">
                </TextBlock>
            </StackPanel>

            <custom:ProgressRing
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                Margin="10"
                HorizontalAlignment="Left"
                IsActive="{Binding ProgressRingActive}">
            </custom:ProgressRing>

            <Button Grid.Row="0" Grid.Column="2" Margin="4" Style="{StaticResource BackgroundButton}" Click="BuildButton_Click">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="StopCircle" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button Grid.Row="0" Grid.Column="3" Margin="4" Style="{StaticResource BackgroundButton}" Click="LogButton_Click">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="CommentCheck" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>
            <Button Grid.Row="0" Grid.Column="4" Margin="4" Style="{StaticResource BackgroundButton}" Click="AboutButton_Click">
                <Button.Content>
                    <iconPacks:PackIconMaterial Kind="Help" Width="Auto" Height="Auto" Margin="4" />
                </Button.Content>
            </Button>

            <TextBlock Text="Stop" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="Log" Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
            <TextBlock Text="About" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0" />
        </Grid>
        <Grid DockPanel.Dock="Bottom" Height="20" x:Name="bottomDock" Panel.ZIndex="100">
            <ProgressBar
                IsIndeterminate="False"
                Minimum="{Binding BottomProgressBarMinimum}"
                Maximum="{Binding BottomProgressBarMaximum}"
                Value="{Binding BottomProgressBarValue}"
                Visibility="{Binding BottomProgressBarVisibility}">
            </ProgressBar>
            <TextBlock
                Background="#dfdfdf" 
                Text="{Binding StatusBarText}"
                Visibility="{Binding BottomStatusBarVisibility}">
            </TextBlock>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid
                Grid.Column="0"
                Visibility="{Binding NormalInterfaceVisibility}">
                <TreeView
                    x:Name="MainTreeView"
                    Background="PaleGreen"
                    FontSize="12"
                    DataContext="{Binding MainTree}"
                    ItemsSource="{Binding Children}"
                    Loaded="MainTreeView_Loaded"
                    SelectedItemChanged="MainTreeView_SelectedItemChanged"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:TreeViewModel}" ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <CheckBox
                                    Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                    Visibility="{Binding CheckBoxVisible}" IsChecked="{Binding Checked, Mode=TwoWay}" Focusable="False">
                                </CheckBox>
                                <ContentPresenter
                                    Content="{Binding Icon}"
                                    Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2,3,2">
                                </ContentPresenter>
                                <TextBlock
                                    Grid.Row="0" Grid.Column="2" VerticalAlignment="Center"
                                    Text="{Binding Text}">
                                </TextBlock>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
            <Grid
                Grid.Column="0"
                Visibility="{Binding BuildInterfaceVisibility}">
                <TreeView
                    Background="PaleGreen"
                    DataContext="{Binding BuildTree}"
                    ItemsSource="{Binding Children}"
                    VirtualizingStackPanel.IsVirtualizing="True"
                    VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate
                            DataType="{x:Type local:TreeViewModel}"
                            ItemsSource="{Binding Children}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="20"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    Content="{Binding Icon}"
                                    Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3,2,3,2">
                                </ContentPresenter>
                                <TextBlock
                                    Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"
                                    Text="{Binding Text}"
                                    FontWeight="{Binding BuildFontWeight}"
                                    Foreground="{Binding BuildBrush}">
                                </TextBlock>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>
            <GridSplitter Width="3" HorizontalAlignment="Right" VerticalAlignment="Stretch" ResizeBehavior="CurrentAndNext"/>
            <Grid Grid.Column="1" Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="LightYellow">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ContentPresenter
                        Name="ScriptLogo"
                        Grid.Row="0" Grid.Column="0"
                        Margin="10"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        UseLayoutRounding="True">
                    </ContentPresenter>
                    <Grid
                        Grid.Row="0" Grid.Column="1"
                        Margin="0, 0, 6, 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30" />
                            <RowDefinition Height="70" />
                        </Grid.RowDefinitions>

                        <DockPanel Grid.Row="0">
                            <TextBlock
                                DockPanel.Dock="Right"
                                Name="ScriptVersion"
                                Text="{Binding ScriptVersionText}"
                                FontWeight="Bold" FontSize="14" 
                                VerticalAlignment="Center"/>
                            <TextBlock
                                DockPanel.Dock="Right"
                                Name="ScriptAuthor"
                                Text="{Binding ScriptAuthorText}" 
                                Margin="0, 0, 5, 6"
                                FontSize="12"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Right"
                                FontStretch="Condensed"
                                TextWrapping="Wrap" />
                            <TextBlock
                                DockPanel.Dock="Left"
                                Name="ScriptTitle"
                                FontStretch="SemiCondensed"
                                Text="{Binding ScriptTitleText}" 
                                FontWeight="Bold" FontSize="16"
                                VerticalAlignment="Center"
                                TextWrapping="Wrap"/>
                        </DockPanel>
                        <TextBlock
                            Grid.Row="1" Grid.Column="0"
                            FontWeight="Medium"
                            Name="ScriptDescription"
                            Text="{Binding ScriptDescriptionText}"
                            FontStretch="SemiCondensed"
                            VerticalAlignment="Center"
                            TextWrapping="Wrap">
                        </TextBlock>
                    </Grid>
                    <Grid
                        Grid.Row="0"
                        Grid.RowSpan="2" Grid.Column="3"
                        Width="25"
                        Visibility="{Binding NormalInterfaceVisibility}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="25" />
                            <RowDefinition Height="25" />
                            <RowDefinition Height="25" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Row="0" Grid.Column="0"
                            Click="ScriptRunButton_Click"
                            ToolTip="Run Script">
                            <Button.Content>
                                <iconPacks:PackIconMaterial Kind="Play" Width="Auto" Height="Auto" Margin="5"/>
                            </Button.Content>
                        </Button>
                        <Button
                            Grid.Row="1" Grid.Column="0"
                            Click="ScriptRefreshButton_Click"
                            ToolTip="Refresh Script">
                            <iconPacks:PackIconMaterial Kind="Refresh" Width="Auto" Height="Auto" Margin="5"/>
                        </Button>
                        <Button
                            Grid.Row="2" Grid.Column="0"
                            Click="ScriptEditButton_Click"
                            ToolTip="Edit Script">
                            <Button.Content>
                                <iconPacks:PackIconMaterial Kind="Pencil" Width="Auto" Height="Auto" Margin="5"/>
                            </Button.Content>
                        </Button>
                        <Button
                            Grid.Row="3" Grid.Column="0"
                            Click="ScriptCheckButton_Click"
                            Background="{Binding ScriptCheckButtonColor}"
                            ToolTip="Syntax Check">
                            <iconPacks:PackIconMaterial Kind="Check" Width="Auto" Height="Auto" Margin="5"/>
                        </Button>
                    </Grid>
                </Grid>

                <Grid
                    Grid.Row="1"
                    HorizontalAlignment="Stretch"
                    Visibility="{Binding BuildInterfaceVisibility}">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="38" />
                        <RowDefinition Height="25" />
                        <RowDefinition Height="38" />
                        <RowDefinition Height="10" />
                    </Grid.RowDefinitions>

                    <Border
                        Grid.Row="0"
                        BorderBrush="Gray"
                        BorderThickness="1"
                        Margin="20, 20, 20, 20">
                        <DockPanel>
                            <TextBlock
                                DockPanel.Dock="Top"
                                TextAlignment="Left"
                                Margin="10, 10, 10, 0"
                                TextWrapping="Wrap"
                                FontWeight="SemiBold"
                                Text="Message"/>
                            <TextBlock
                                DockPanel.Dock="Top"
                                VerticalAlignment="Top"
                                TextAlignment="Left"
                                Margin="10, 10, 10, 0"
                                TextWrapping="Wrap"
                                Text="{Binding BuildEchoMessage}"/>
                            <!-- ShellExecute Console Output -->
                            <TextBlock
                                DockPanel.Dock="Top"
                                TextAlignment="Left"
                                Margin="10, 20, 10, 0"
                                TextWrapping="Wrap"
                                FontWeight="SemiBold"
                                Visibility="{Binding BuildConOutRedirectVisibility}"
                                Text="ShellExecute Console Output"/>
                            <TextBox
                                DockPanel.Dock="Top"
                                Margin="10, 10, 10, 10"
                                Visibility="{Binding BuildConOutRedirectVisibility}"
                                TextAlignment="Left"
                                VerticalAlignment="Top"
                                TextWrapping="Wrap"
                                AcceptsReturn="True"
                                VerticalContentAlignment="Stretch"
                                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                ScrollViewer.CanContentScroll="True"
                                IsReadOnly="True"
                                TextChanged="BuildConOutRedirectTextBox_TextChanged"
                                Text="{Binding BuildConOutRedirect}"/>
                            <!-- ProgressBar -->
                            <TextBlock
                                DockPanel.Dock="Top"
                                TextAlignment="Left"
                                Margin="10, 20, 10, 0"
                                TextWrapping="Wrap"
                                FontWeight="SemiBold"
                                Visibility="{Binding BuildCommandProgressVisibility}"
                                Text="{Binding BuildCommandProgressTitle}"/>
                            <ProgressBar
                                DockPanel.Dock="Top"
                                Margin="10, 7, 10, 0"
                                Height="20"
                                Visibility="{Binding BuildCommandProgressVisibility}"
                                Minimum="0"
                                Maximum="{Binding BuildCommandProgressMax}"
                                Value="{Binding BuildCommandProgressValue}" />
                            <TextBlock
                                DockPanel.Dock="Top"
                                TextAlignment="Left"
                                Margin="10, 3, 10, 0"
                                TextWrapping="Wrap"
                                Visibility="{Binding BuildCommandProgressVisibility}"
                                Text="{Binding BuildCommandProgressText}"/>
                        </DockPanel>
                    </Border>

                    <TextBlock
                        Grid.Row="1"
                        Margin="20, 0, 20, 5"
                        TextAlignment="Left"
                        FontWeight="SemiBold"
                        Text="Script Progress" />
                    <ProgressBar
                        Grid.Row="2"
                        Margin="20, 0, 20, 10"
                        Minimum="0"
                        Maximum="{Binding BuildScriptProgressBarMax}"
                        Value="{Binding BuildScriptProgressBarValue}" />
                    <TextBlock
                        Grid.Row="3"
                        Margin="20, 0, 20, 5"
                        TextAlignment="Left"
                        FontWeight="SemiBold"
                        Text="Full Progress" />
                    <ProgressBar
                        Grid.Row="4"
                        Margin="20, 0, 20, 10"
                        Minimum="0"
                        Maximum="{Binding BuildFullProgressBarMax}"
                        Value="{Binding BuildFullProgressBarValue}" />
                </Grid>

                <ScrollViewer
                    Grid.Row="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding NormalInterfaceVisibility}"
                    Content="{Binding MainCanvas}">
                </ScrollViewer>
            </Grid>
        </Grid>
    </DockPanel>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding TaskbarProgressState}" >
            <TaskbarItemInfo.ProgressValue>
                <MultiBinding Converter="{StaticResource TaskbarProgressConverter}" >
                    <Binding Path="BuildFullProgressBarMax" />
                    <Binding Path="BuildFullProgressBarValue" />
                </MultiBinding>
            </TaskbarItemInfo.ProgressValue>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
</Window>
